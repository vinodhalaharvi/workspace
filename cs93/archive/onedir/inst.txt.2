if(sscanf(input, "00000000000%5s%5ssa000000" rt, rd, sa) == 3) return sll(rs, rt, sa); 
if(sscanf(input, "00000000000%5s%5ssa000010" rt, rd, sa) == 3) return srl(rt, rd, sa);
if(sscanf(input, "00000000000%5s%5ssa000011" rt, rd, sa) == 3) return sra(rt, rd, sa);
if(sscanf(input, "000000%5s%5s%5s00000000100" rs, rt, rd) == 3) return sllv(rs, rt, rd); 
if(sscanf(input, "000000%5s%5s%5s00000000110" rs, rt, rd) == 3) return srlv(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000000111" rs, rt, rd) == 3) return srav(rs, rt, rd);
if(sscanf(input, "000000%5s000000000000000001000" rs) == 1) return jr(rs);
if(sscanf(input, "000000%5s00000%5s00000001001" rs, rd) == 2) return jalr(rs, rd); 
if(sscanf(input, "000000%5s%5s%5s00000100000" rs, rt, rd) == 3) return add(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100001" rs, rt, rd) == 3) return addu(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100010" rs, rt, rd) == 3) return sub(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100011" rs, rt, rd) == 3) return subu(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100100" rs, rt, rd) == 3) return and(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100101" rs, rt, rd) == 3) return or(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100110" rs, rt, rd) == 3) return xor(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000100111" rs, rt, rd) == 3) return nor(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000101010" rs, rt, rd) == 3) return slt(rs, rt, rd);
if(sscanf(input, "000000%5s%5s%5s00000101011" rs, rt, rd) == 3) return sltu(rs, rt, rd);
if(sscanf(input, "000010%26s", inst_index) == 1) return j(inst_index); 
if(sscanf(input, "000011%26s" inst_index) == 1) return jal(inst_index); 
if(sscanf(input, "000100%5s%5s%16s" rs, rt, offset) == 3) return beq(rs, rt, offset); 
if(sscanf(input, "000101%5s%5s%16s" rs, rt, offset) == 3) return bne(rs, rt, offset); 
if(sscanf(input, "000110%5s00000%16s" rs, offset) == 2) return blez(rs, offset); 
if(sscanf(input, "000111%5s00000%16s" rs, offset) == 2) return bgtz(rs, offset); 
if(sscanf(input, "001000%5s%5s%16s" rs, rt, imm) == 3) return addi(rs, rt, imm);
if(sscanf(input, "001001%5s%5s%16s" rs, rt, imm) == 3) return addiu(rs, rt, imm);
if(sscanf(input, "001010%5s%5s%16s" rs, rt, imm) == 3) return slti(rs, rt, imm);
if(sscanf(input, "001011%5s%5s%16s" rs, rt, imm) == 3) return sltiu(rs, rt, imm);
if(sscanf(input, "001100%5s%5s%16s" rs, rt, imm) == 3) return andi(rs, rt, imm);
if(sscanf(input, "001101%5s%5s%16s" rs, rt, imm) == 3) return ori(rs, rt, imm);
if(sscanf(input, "001110%5s%5s%16s" rs, rt, imm) == 3) return xori(rs, rt, imm);
if(sscanf(input, "00111100000%5s%16s"  rt, imm) == 2) return lui(rt, imm); 
if(sscanf(input, "100000base%5s%16s" base, rt, offset) == 3) return lb(base, rt, offset);
if(sscanf(input, "100001base%5s%16s" base, rt, offset) == 3) return lh(base, rt, offset);
if(sscanf(input, "100010base%5s%16s" base, rt, offset) == 3) return lwl(base, rt, offset);
if(sscanf(input, "100011base%5s%16s" base, rt, offset) == 3) return lw(base, rt, offset);
if(sscanf(input, "100100base%5s%16s" base, rt, offset) == 3) return lbu(base, rt, offset);
if(sscanf(input, "100101base%5s%16s" base, rt, offset) == 3) return lhu(base, rt, offset);
if(sscanf(input, "100110base%5s%16s" base, rt, offset) == 3) return lwr(base, rt, offset);
if(sscanf(input, "101000base%5s%16s" base, rt, offset) == 3) return sb(base, rt, offset);
if(sscanf(input, "101001base%5s%16s" base, rt, offset) == 3) return sh(base, rt, offset);
if(sscanf(input, "101010base%5s%16s" base, rt, offset) == 3) return sw(base, rt, offset);
if(sscanf(input, "101011base%5s%16s" base, rt, offset) == 3) return swl(base, rt, offset);
if(sscanf(input, "101110base%5s%16s" base, rt, offset) == 3) return swr(base, rt, offset);
if(sscanf(input, "000001%5s00001%16s" rs, offset) == 2) return bgez(rs, offset);
if(sscanf(input, "000001%5s10001%16s" rs, offset) == 2) return bgezal(rs, offset);
if(sscanf(input, "000001%5s00000%16s" rs, offset) == 2) return bltz(rs, offset);
if(sscanf(input, "000001%5s10000%16s" rs, offset) == 2) return bltzal(rs, offset);
