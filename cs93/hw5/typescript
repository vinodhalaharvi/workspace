Script started on Sat 15 Nov 2014 03:24:24 AM UTC
ubuntu@domU-12-31-39-04-12-F7:~/hd/workspace/cs93/hw5$ mak e[K[Ke runas
gcc -Wno-unused-variable -Wall -ggdb -std=gnu99   -c -o aslib.o aslib.c -lncurses  
gcc -Wno-unused-variable -Wall -ggdb -std=gnu99   -c -o ascommand.o ascommand.c -lncurses  
gcc -Wno-unused-variable -Wall -ggdb -std=gnu99   -c -o assembler.o assembler.c -lncurses  
gcc   aslib.o ascommand.o assembler.o  -lncurses -o assembler 
./assembler  asm/test.asm mif/test.mif

symbol table contents:
REG_IOCONTROL=65280
REG_IOBUFFER_1=65284
REG_IOBUFFER_2=65288
STACK_BASE=24320
firstNumber=21760
secondNumber=21764
outputString=21768
mul10=2
div10=12
toChar=36
toDigit=40
intToString=44
intToStringskip=72
mainLoop=74
exit=98
stringToInt=114
stringToIntLoop=128
Isneg=146
fixNeg=152
result=156
multiply=162
skip1=174
skip2=180
multiplyloop=184
back=192
skip3=202
skip4=206
label=214
main=220

	jal main ; [0x000000]:0x0C0000DC
	sll $t0, $a0, 3 ; [0x000002]:0x000440C0
	sll $t1, $a0, 1  ; [0x000004]:0x00044840
add $t0, $t0, $t1 	 ; [0x000006]:0x01094020
add $a0, $t0, $zero ; [0x000008]:0x01002020
		jr $ra ; [0x00000A]:0x03E00008
	addi $sp, $sp, -60 ; [0x00000C]:0x23BDFFC4
	sw $s0, 24($sp)   ; [0x00000E]:0xABB00018
	sw $s1, 28($sp)  ; [0x000010]:0xABB1001C
	sw $ra, 32($sp)  ; [0x000012]:0xABBF0020
addi $a1, $zero, 0x1999  ; [0x000014]:0x20050000
	jal multiply  ; [0x000016]:0x0C0000A2
	srl $a0, $v0, 16  ; [0x000018]:0x00022402
	lw $s0, 24($sp) ; [0x00001A]:0x8FB00018
	lw $s1, 28($sp) ; [0x00001C]:0x8FB1001C
	lw $ra, 32($sp) ; [0x00001E]:0x8FBF0020
	addi $sp, $sp, 60 ; [0x000020]:0x23BD003C
		jr $ra ; [0x000022]:0x03E00008
	addi $a0, $a0, 48 ; [0x000024]:0x20840030
		jr $ra ; [0x000026]:0x03E00008
addi $a0, $a0, -48  ; [0x000028]:0x2084FFD0
		jr $ra ; [0x00002A]:0x03E00008
	addi $sp, $sp, -60 ; [0x00002C]:0x23BDFFC4
	sw $s0, 24($sp)   ; [0x00002E]:0xABB00018
	sw $s1, 28($sp)  ; [0x000030]:0xABB1001C
	sw $s2, 32($sp)  ; [0x000032]:0xABB20020
	sw $s3, 36($sp)  ; [0x000034]:0xABB30024
	sw $ra, 40($sp)  ; [0x000036]:0xABBF0028
la   $s3, outputString ; [0x00003A]:0x36735508
slt  $t4, $a0, $zero  ; [0x00003C]:0x0080602A
beq  $t4, $zero, intToStringskip ; [0x00003E]:0x100C0048
addi $t4, $zero, 0  ; [0x000040]:0x200C0000
addi $t4, $t4, '-'  ; [0x000042]:0x218C0000
	sb   $t4, 0($s3) ; [0x000044]:0xA26C0000
	addi $s3, $s3, 1 ; [0x000046]:0x22730001
sub  $a0, $zero, $a0  ; [0x000048]:0x00042022
add $s0, $a0, $zero ; [0x00004A]:0x00808020
	add  $a0, $s0, $zero ; [0x00004C]:0x02002020
		jal  div10  ; [0x00004E]:0x0C00000C
	add  $s1, $a0, $zero ; [0x000050]:0x00808820
		jal  mul10  ; [0x000052]:0x0C000002
	sub  $t0, $s0, $a0 ; [0x000054]:0x02044022
	add  $s0, $s1, $zero ; [0x000056]:0x02208020
	add  $a0, $t0, $zero ; [0x000058]:0x01002020
		jal  toChar ; [0x00005A]:0x0C000024
		sb   $a0, 0($s3) ; [0x00005C]:0xA2640000
		addi $s3, $s3, 1 ; [0x00005E]:0x22730001
	beq  $s0, $zero, exit ; [0x000060]:0x10100062
		j    mainLoop ; [0x000062]:0x0800004A
	la     $a0, outputString  ; [0x000066]:0x34845508
		lw $s0, 24($sp) ; [0x000068]:0x8FB00018
		lw $s1, 28($sp) ; [0x00006A]:0x8FB1001C
		lw $s2, 32($sp)  ; [0x00006C]:0x8FB20020
		lw $s3, 36($sp)  ; [0x00006E]:0x8FB30024
		lw $ra, 40($sp)  ; [0x000070]:0x8FBF0028
		addi $sp, $sp, 60 ; [0x000072]:0x23BD003C
			jr $ra ; [0x000074]:0x03E00008
addi $sp, $sp, -60 ; [0x000076]:0x23BDFFC4
sw $s0, 24($sp)   ; [0x000078]:0xABB00018
add      $v0, $zero, $zero  ; [0x00007A]:0x00001020
add      $t1, $zero, $zero  ; [0x00007C]:0x00004820
lb       $t0, 0($a0) ; [0x00007E]:0x80880000
addi     $t8, $zero, 45  ; [0x000080]:0x2018002D
beq      $t0, $t8, Isneg ; [0x000082]:0x13080092
lb      $t0, 0($a0) ; [0x000084]:0x80880000
beq     $t0, $zero, fixNeg  ; [0x000086]:0x10080098
sll     $t2, $v0, 1  ; [0x000088]:0x00025040
sll     $v0, $v0, 3  ; [0x00008A]:0x000210C0
add     $v0, $v0, $t2        ; [0x00008C]:0x004A1020
addi    $t0, $t0, -48  ; [0x00008E]:0x2108FFD0
add     $v0, $v0, $t0        ; [0x000090]:0x00481020
addi    $a0, $a0, 1          ; [0x000092]:0x20840001
j  stringToIntLoop ; [0x000094]:0x08000080
addi     $t1, $zero, 1  ; [0x000096]:0x20090001
addi     $a0, $a0, 1 ; [0x000098]:0x20840001
j stringToIntLoop ; [0x00009A]:0x08000080
beq     $t1, $zero, result  ; [0x00009C]:0x1009009C
sub     $v0, $zero, $v0  ; [0x00009E]:0x00021022
lw  $s0, 24($sp) ; [0x0000A0]:0x8FB00018
addi $sp, $sp, 60 ; [0x0000A2]:0x23BD003C
  jr  $ra    ; [0x0000A4]:0x03E00008
	addi $sp, $sp, -60 ; [0x0000A6]:0x23BDFFC4
	sw $s0, 24($sp)  ; [0x0000A8]:0xABB00018
	sw $s1, 28($sp)  ; [0x0000AA]:0xABB1001C
slt  $t4, $a0, $zero  ; [0x0000AC]:0x0080602A
beq  $t4, $zero, skip1 ; [0x0000AE]:0x100C00AE
sub  $a0, $zero, $a0  ; [0x0000B0]:0x00042022
slt  $t5, $a1, $zero  ; [0x0000B2]:0x00A0682A
beq  $t5, $zero, skip2 ; [0x0000B4]:0x100D00B4
sub  $a1, $zero, $a1  ; [0x0000B6]:0x00052822
add $t0, $zero, $zero ; [0x0000B8]:0x00004020
addi $v0, $zero, 0  ; [0x0000BA]:0x20020000
	srav  $t1, $a1, $t0  ; [0x0000BC]:0x01054807
		andi  $t2, $t1, 1 ; [0x0000BE]:0x312A0001
	addi  $t1, $zero, 1 ; [0x0000C0]:0x20090001
	beq   $t2, $t1 label  ; [0x0000C2]:0x112A00D6
		addi  $t0, $t0, 1 ; [0x0000C4]:0x21080001
		slti  $t8, $t0, 32  ; [0x0000C6]:0x29180020
	bne   $t8, $zero, multiplyloop	 ; [0x0000C8]:0x141800B8
		beq $t4, $zero, skip3  ; [0x0000CA]:0x100C00CA
		sub  $v0, $zero, $v0  ; [0x0000CC]:0x00021022
			beq $t5, $zero, skip4  ; [0x0000CE]:0x100D00CE
			sub  $v0, $zero, $v0  ; [0x0000D0]:0x00021022
				lw $s0, 24($sp) ; [0x0000D2]:0x8FB00018
				lw $s1, 28($sp) ; [0x0000D4]:0x8FB1001C
				addi $sp, $sp, 60 ; [0x0000D6]:0x23BD003C
						jr $ra ; [0x0000D8]:0x03E00008
		sllv $t3, $a0, $t0  ; [0x0000DA]:0x01045804
		add $v0, $v0, $t3  ; [0x0000DC]:0x004B1020
				j back ; [0x0000DE]:0x080000C0
la $a0, firstNumber  ; [0x0000E2]:0x34845500
jal stringToInt ; [0x0000E4]:0x0C000072
add $s0, $v0, $zero ; [0x0000E6]:0x00408020
la $a0, secondNumber  ; [0x0000EA]:0x34845504
jal stringToInt ; [0x0000EC]:0x0C000072
add $s1, $v0, $zero ; [0x0000EE]:0x00408820
add $a0, $s0, $zero ; [0x0000F0]:0x02002020
add $a1, $s1, $zero ; [0x0000F2]:0x02202820
	jal multiply ; [0x0000F4]:0x0C0000A2

The output has been written to  mif/test.mif file .. 
ubuntu@domU-12-31-39-04-12-F7:~/hd/workspace/cs93/hw5$ exit

Script done on Sat 15 Nov 2014 03:24:30 AM UTC
