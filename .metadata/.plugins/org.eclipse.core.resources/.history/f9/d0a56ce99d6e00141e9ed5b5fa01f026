/**
 * 
 */
package cscie97.asn3.squaredesk.role;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import cscie97.asn3.squaredesk.authentication.Entitlement;


/**
 * The Class Role.
 */
public class Role extends Entitlement {
	
	/** The entitlements. */
	private Map<String, Entitlement> entitlements; 

	/** The role id. */
	private String roleId; 
	
	/**
	 * Adds the entitlement to list.
	 *
	 * @param entitlement the entitlement
	 * @return the entitlement
	 */
	public Entitlement addEntitlementToList(Entitlement entitlement) {	
		String uuidName = getUUID(); 
		entitlement.setEntitlementId(uuidName); 
		entitlements.put(uuidName, entitlement); 
		return entitlement;
	}

	/**
	 * Gets the uuid.
	 *
	 * @return the uuid
	 */
	protected String getUUID() {
		String uuidStr = UUID.randomUUID().toString(); 
		return uuidStr; 	
	}
	

	/**
	 * Gets the entitlementfrom list.
	 *
	 * @param entitlementId the entitlement id
	 * @return the entitlementfrom list
	 * @throws EntitlementNotFoundException the entitlement not found exception
	 */
	public Entitlement getEntitlementfromList(String entitlementId) 
			throws EntitlementNotFoundException {
		if (!entitlements.containsKey(entitlementId)){ 
			throw new EntitlementNotFoundException("Entitlement you are looking is Not Found!"); 
		} else { 
			return entitlements.get(entitlementId); 
		}		
	}

	/**
	 * Removes the entitlement from list.
	 *
	 * @param entitlementId the entitlement id
	 * @throws EntitlementNotFoundException the entitlement not found exception
	 */
	public void removeEntitlementFromList(String entitlementId)
			throws EntitlementNotFoundException{
		if (!entitlements.containsKey(entitlementId)){ 
			throw new EntitlementNotFoundException("Entitlement you are looking is Not Found!"); 
		} else { 
			entitlements.remove(entitlementId); 
		}	
	}

	/**
	 * Gets the entitlements.
	 *
	 * @return the entitlements
	 */
	public Collection<Entitlement> getEntitlements() {
		return entitlements.values(); 
	}

}
